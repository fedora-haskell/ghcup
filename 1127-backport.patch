From ed0fd9bab79f477256c4cc747ac621c2cfa9f87f Mon Sep 17 00:00:00 2001
From: Julian Ospald <hasufell@posteo.de>
Date: Fri, 2 Feb 2024 17:31:09 +0800
Subject: [PATCH 01/16] Support GHC-9.6 wrt #979

---
diff --git a/app/ghcup/Main.hs b/app/ghcup/Main.hs
index 391d932d..1464d64b 100644
--- a/app/ghcup/Main.hs
+++ b/app/ghcup/Main.hs
@@ -32,6 +32,7 @@ import           GHCup.Prelude.Logger
 import           GHCup.Prelude.String.QQ
 import           GHCup.Version
 
+import           Control.Monad (when, forM_, unless)
 import           Control.Concurrent
 import           Control.Concurrent.Async
 import           Control.Exception.Safe
diff --git a/lib-opt/GHCup/OptParse/Common.hs b/lib-opt/GHCup/OptParse/Common.hs
index aeed4e11..d7ff3f5f 100644
--- a/lib-opt/GHCup/OptParse/Common.hs
+++ b/lib-opt/GHCup/OptParse/Common.hs
@@ -3,6 +3,7 @@
 {-# LANGUAGE FlexibleContexts  #-}
 {-# LANGUAGE OverloadedStrings #-}
 {-# LANGUAGE DuplicateRecordFields #-}
+{-# LANGUAGE FlexibleInstances #-}
 {-# LANGUAGE TypeApplications #-}
 {-# LANGUAGE NumericUnderscores #-}
 {-# LANGUAGE ViewPatterns      #-}
@@ -22,6 +23,7 @@ import           GHCup.Prelude
 import           GHCup.Prelude.Process
 import           GHCup.Prelude.Logger
 
+import           Control.Monad (forM, join)
 import           Control.DeepSeq
 import           Control.Concurrent
 import           Control.Concurrent.Async
diff --git a/lib-opt/GHCup/OptParse/Compile.hs b/lib-opt/GHCup/OptParse/Compile.hs
index 1f857f63..478b8d41 100644
--- a/lib-opt/GHCup/OptParse/Compile.hs
+++ b/lib-opt/GHCup/OptParse/Compile.hs
@@ -26,6 +26,7 @@ import           GHCup.OptParse.Common
 #if !MIN_VERSION_base(4,13,0)
 import           Control.Monad.Fail             ( MonadFail )
 #endif
+import           Control.Monad (when, forM_, forM)
 import           Control.Concurrent (threadDelay)
 import           Control.Monad.Reader
 import           Control.Monad.Trans.Resource
diff --git a/lib-opt/GHCup/OptParse/Config.hs b/lib-opt/GHCup/OptParse/Config.hs
index c2f58505..2bef5a55 100644
--- a/lib-opt/GHCup/OptParse/Config.hs
+++ b/lib-opt/GHCup/OptParse/Config.hs
@@ -23,6 +23,7 @@ import           GHCup.OptParse.Common
 #if !MIN_VERSION_base(4,13,0)
 import           Control.Monad.Fail             ( MonadFail )
 #endif
+import           Control.Monad (when)
 import           Control.Exception              ( displayException )
 import           Control.Monad.Reader
 import           Control.Monad.Trans.Resource
diff --git a/lib-opt/GHCup/OptParse/GC.hs b/lib-opt/GHCup/OptParse/GC.hs
index edc01f1b..39d17224 100644
--- a/lib-opt/GHCup/OptParse/GC.hs
+++ b/lib-opt/GHCup/OptParse/GC.hs
@@ -20,6 +20,7 @@ import           GHCup.Prelude.String.QQ
 #if !MIN_VERSION_base(4,13,0)
 import           Control.Monad.Fail             ( MonadFail )
 #endif
+import           Control.Monad (when)
 import           Control.Monad.Reader
 import           Control.Monad.Trans.Resource
 import           Data.Functor
diff --git a/lib-opt/GHCup/OptParse/Install.hs b/lib-opt/GHCup/OptParse/Install.hs
index 3d055068..214fef23 100644
--- a/lib-opt/GHCup/OptParse/Install.hs
+++ b/lib-opt/GHCup/OptParse/Install.hs
@@ -29,6 +29,7 @@ import           Control.Concurrent (threadDelay)
 #if !MIN_VERSION_base(4,13,0)
 import           Control.Monad.Fail             ( MonadFail )
 #endif
+import           Control.Monad (when, forM_)
 import           Control.Monad.Reader
 import           Control.Monad.Trans.Resource
 import           Data.Either
diff --git a/lib-opt/GHCup/OptParse/List.hs b/lib-opt/GHCup/OptParse/List.hs
index f82b9f8c..89bc506e 100644
--- a/lib-opt/GHCup/OptParse/List.hs
+++ b/lib-opt/GHCup/OptParse/List.hs
@@ -21,6 +21,7 @@ import           GHCup.Prelude.String.QQ
 #if !MIN_VERSION_base(4,13,0)
 import           Control.Monad.Fail             ( MonadFail )
 #endif
+import           Control.Monad (forM_)
 import           Control.Monad.Reader
 import           Control.Monad.Trans.Resource
 import           Data.Char
diff --git a/lib-opt/GHCup/OptParse/Nuke.hs b/lib-opt/GHCup/OptParse/Nuke.hs
index 2a5a84f9..ad5c3b42 100644
--- a/lib-opt/GHCup/OptParse/Nuke.hs
+++ b/lib-opt/GHCup/OptParse/Nuke.hs
@@ -19,6 +19,7 @@ import           GHCup.Prelude.Logger
 #if !MIN_VERSION_base(4,13,0)
 import           Control.Monad.Fail             ( MonadFail )
 #endif
+import           Control.Monad (forM_, void)
 import           Control.Monad.Reader
 import           Control.Monad.Trans.Resource
 import           Data.Maybe
diff --git a/lib-opt/GHCup/OptParse/Prefetch.hs b/lib-opt/GHCup/OptParse/Prefetch.hs
index 678ea3ef..ad3d0cb0 100644
--- a/lib-opt/GHCup/OptParse/Prefetch.hs
+++ b/lib-opt/GHCup/OptParse/Prefetch.hs
@@ -24,6 +24,7 @@ import           GHCup.OptParse.Common
 #if !MIN_VERSION_base(4,13,0)
 import           Control.Monad.Fail             ( MonadFail )
 #endif
+import           Control.Monad (forM_)
 import           Control.Monad.Reader
 import           Control.Monad.Trans.Resource
 import           Data.Functor
diff --git a/lib-opt/GHCup/OptParse/Rm.hs b/lib-opt/GHCup/OptParse/Rm.hs
index a02f081b..d6be8677 100644
--- a/lib-opt/GHCup/OptParse/Rm.hs
+++ b/lib-opt/GHCup/OptParse/Rm.hs
@@ -25,6 +25,7 @@ import           GHCup.OptParse.Common
 #if !MIN_VERSION_base(4,13,0)
 import           Control.Monad.Fail             ( MonadFail )
 #endif
+import           Control.Monad (forM_)
 import           Control.Monad.Reader
 import           Control.Monad.Trans.Resource
 import           Data.Functor
diff --git a/lib-opt/GHCup/OptParse/Run.hs b/lib-opt/GHCup/OptParse/Run.hs
index b1b2d550..b637a8c8 100644
--- a/lib-opt/GHCup/OptParse/Run.hs
+++ b/lib-opt/GHCup/OptParse/Run.hs
@@ -29,6 +29,7 @@ import           Control.Exception.Safe         ( MonadMask, MonadCatch )
 #if !MIN_VERSION_base(4,13,0)
 import           Control.Monad.Fail             ( MonadFail )
 #endif
+import           Control.Monad (when, forM_, forM, unless)
 import           Control.Monad.Reader
 import           Control.Monad.Trans.Resource
 import           Data.Functor
diff --git a/lib-opt/GHCup/OptParse/Upgrade.hs b/lib-opt/GHCup/OptParse/Upgrade.hs
index 0ab9f61e..61ca75b8 100644
--- a/lib-opt/GHCup/OptParse/Upgrade.hs
+++ b/lib-opt/GHCup/OptParse/Upgrade.hs
@@ -21,6 +21,7 @@ import           Control.Concurrent (threadDelay)
 #if !MIN_VERSION_base(4,13,0)
 import           Control.Monad.Fail             ( MonadFail )
 #endif
+import           Control.Monad (forM_)
 import           Control.Monad.Reader
 import           Control.Monad.Trans.Resource
 import           Data.Functor
diff --git a/lib-tui/GHCup/Brick/Actions.hs b/lib-tui/GHCup/Brick/Actions.hs
index 24381ad5..3fafa9f9 100644
--- a/lib-tui/GHCup/Brick/Actions.hs
+++ b/lib-tui/GHCup/Brick/Actions.hs
@@ -36,6 +36,7 @@ import qualified Brick.Widgets.List as L
 import qualified Brick.Focus as F
 import           Control.Applicative
 import           Control.Exception.Safe
+import           Control.Monad (when, forM, forM_)
 #if !MIN_VERSION_base(4,13,0)
 import           Control.Monad.Fail             ( MonadFail )
 #endif
diff --git a/lib-tui/GHCup/Brick/App.hs b/lib-tui/GHCup/Brick/App.hs
index 2b1d5ddd..c1c0844a 100644
--- a/lib-tui/GHCup/Brick/App.hs
+++ b/lib-tui/GHCup/Brick/App.hs
@@ -49,7 +49,6 @@ import Brick (
 import qualified Brick
 import Control.Monad.Reader (
   MonadIO (liftIO),
-  void,
  )
 import Data.IORef (readIORef)
 import Data.List (find, intercalate)
@@ -66,7 +65,7 @@ import Optics.State (use)
 import Optics.State.Operators ((.=))
 import qualified GHCup.Brick.Widgets.Menus.CompileGHC as CompileGHC
 import qualified GHCup.Brick.Widgets.Menus.CompileHLS as CompileHLS
-import Control.Monad (when)
+import Control.Monad (void, when)
 
 app :: AttrMap -> AttrMap -> App BrickState () Name
 app attrs dimAttrs =
diff --git a/lib/GHCup/Prelude/File.hs b/lib/GHCup/Prelude/File.hs
index 28da4a08..393a7ee1 100644
--- a/lib/GHCup/Prelude/File.hs
+++ b/lib/GHCup/Prelude/File.hs
@@ -74,6 +74,7 @@ import Control.DeepSeq (force)
 import Control.Exception (evaluate)
 import GHC.IO.Exception
 import System.IO.Error
+import Control.Monad (when, forM_, filterM)
 
 
 -- | Merge one file tree to another given a copy operation.
diff --git a/lib/GHCup/Prelude/File/Search.hs b/lib/GHCup/Prelude/File/Search.hs
index 2a004a04..a738a3ee 100644
--- a/lib/GHCup/Prelude/File/Search.hs
+++ b/lib/GHCup/Prelude/File/Search.hs
@@ -12,6 +12,7 @@ module GHCup.Prelude.File.Search (
 import           GHCup.Prelude.Internal ((!?))
 import           GHCup.Types(ProcessError(..), CapturedProcess(..))
 
+import           Control.Monad (forM)
 import           Control.Monad.Reader
 import           Data.Maybe
 import           Data.Text               ( Text )
diff --git a/lib/GHCup/Utils/Parsers.hs b/lib/GHCup/Utils/Parsers.hs
index e44d5929..e7e96b68 100644
--- a/lib/GHCup/Utils/Parsers.hs
+++ b/lib/GHCup/Utils/Parsers.hs
@@ -1,6 +1,7 @@
 {-# LANGUAGE CPP               #-}
 {-# LANGUAGE DataKinds         #-}
 {-# LANGUAGE FlexibleContexts  #-}
+{-# LANGUAGE FlexibleInstances #-}
 {-# LANGUAGE OverloadedStrings #-}
 {-# LANGUAGE DuplicateRecordFields #-}
 {-# LANGUAGE ViewPatterns      #-}
@@ -17,7 +18,8 @@ import           GHCup.Prelude
 import           GHCup.Prelude.Logger
 import           GHCup.Prelude.MegaParsec
 
-import           Control.Applicative ((<|>))
+import           Control.Applicative ((<|>), Alternative(..))
+import           Control.Monad (when)
 import           Control.Exception.Safe
 #if !MIN_VERSION_base(4,13,0)
 import           Control.Monad.Fail             ( MonadFail )
@@ -390,3 +392,12 @@ parseNewUrlSource "GHCupURL" = pure NewGHCupURL
 parseNewUrlSource "StackSetupURL" = pure NewStackSetupURL
 parseNewUrlSource s' = (eitherDecode . LE.encodeUtf8 . LT.pack $ s')
             <|> (fmap NewURI . first show . parseURI .UTF8.fromString $ s')
+
+
+#if MIN_VERSION_transformers(0,6,0)
+instance Alternative (Either [a]) where
+    empty        = Left []
+    Left _ <|> n = n
+    m      <|> _ = m
+#endif
+
